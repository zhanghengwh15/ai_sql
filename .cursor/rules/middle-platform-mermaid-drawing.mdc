# 中台自动Mermaid绘图规范

## 1. 核心概念

### 1.1 三个领域
- **对接方**：外部系统或数据源
- **数据中台**：核心数据处理和存储平台
- **openAPI**：对外开放的API接口

### 1.2 五种类型
- **数据字典**：数据定义和元数据
- **接口**：系统间通信接口
- **采集任务**：数据采集相关任务
- **计算任务**：数据处理和计算任务
- **出仓任务**：数据输出和分发任务
- **开放接口**：中台自定义对外提供

## 2. 命名规范

### 2.1 节点命名格式
```
领域：类型：【环境】任务名称
```

### 2.2 命名示例
- `数据中台：计算任务：【正式】销售订单对比数据表`
- `对接方：接口：【测试】ERP订单接口`
- `openAPI：接口：【生产】用户数据查询接口`

## 3. 图表结构规范

### 3.1 基本关系
- **采集任务** → 通过**接口** → 采集到**数据字典**
- **出仓任务** → 通过**数据字典** → 调用**接口**
- **出仓任务** → 调用**openAPI**或**对接方**数据

### 3.2 领域容器规范
- 每个领域使用`subgraph`创建独立的容器
- 容器使用大圆角长方形样式（圆角半径12px）
- 背景颜色要浅色，确保内部元素清晰可见
- 容器标题使用领域名称

### 3.3 节点颜色规范
```mermaid
graph TD
    subgraph external ["对接方"]
        A["对接方：接口：【测试】ERP订单接口"]:::external
    end
    
    subgraph middle ["数据中台"]
        B["数据中台：数据字典：订单主表"]:::middle
        C["数据中台：计算任务：【正式】销售订单对比数据表"]:::middle
        D["数据中台：出仓任务：【正式】订单数据推送"]:::middle
    end
    
    subgraph api ["openAPI"]
        E["openAPI：开放接口：【生产】用户数据查询接口"]:::api
    end
    
    %% 关系连接
    A -->|采集| B
    B -.->|计算| C
    C -.->|出仓| D
    D -->|调用| E
    
    %% 样式定义
    classDef external fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef middle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px
    classDef api fill:#fff3e0,stroke:#e65100,stroke-width:2px
```

## 4. 绘图最佳实践

### 4.1 领域容器设计
- 使用`subgraph`创建领域容器
- 容器标题使用领域名称
- 背景颜色使用浅色，确保内部元素对比度
- 容器边框使用大圆角样式（12px圆角半径）

### 4.2 节点文本规范
- 所有包含特殊字符的节点文本必须使用双引号包裹
- 节点名称应清晰表达其功能和用途
- 环境标识使用【】包围

### 4.3 关系线规范
- 使用有意义的动词描述关系
- **内部调用**：使用虚线（-.->）表示同一容器内的调用关系
- **外部调用**：使用实线（-->）表示跨容器的调用关系
- 关系线应避免交叉
- 重要关系可使用粗线或不同颜色

### 4.4 布局规范
- 对接方容器放在左侧
- 数据中台容器放在中央
- openAPI容器放在右侧
- 数据流向从左到右

## 5. 完整示例

```mermaid
graph LR
    subgraph external ["对接方"]
        A1["对接方：接口：【测试】ERP订单接口"]:::external
        A2["对接方：接口：【正式】CRM用户接口"]:::external
    end
    
    subgraph middle ["数据中台"]
        B1["数据中台：数据字典：订单主表"]:::middle
        B2["数据中台：数据字典：用户信息表"]:::middle
        C1["数据中台：采集任务：【正式】ERP订单采集"]:::middle
        C2["数据中台：采集任务：【正式】CRM用户采集"]:::middle
        D1["数据中台：计算任务：【正式】销售订单对比数据表"]:::middle
        D2["数据中台：出仓任务：【正式】订单数据推送"]:::middle
    end
    
    subgraph api ["openAPI"]
        E1["openAPI：开放接口：【生产】订单查询接口"]:::api
        E2["openAPI：开放接口：【生产】用户数据查询接口"]:::api
    end
    
    %% 关系连接
    A1 -->|采集| C1
    A2 -->|采集| C2
    C1 -.->|存储| B1
    C2 -.->|存储| B2
    B1 -.->|计算| D1
    B2 -.->|计算| D1
    D1 -.->|出仓| D2
    D2 -->|调用| E1
    D2 -->|调用| E2
    
    %% 样式定义
    classDef external fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef middle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px
    classDef api fill:#fff3e0,stroke:#e65100,stroke-width:2px
```

## 6. 容器样式配置

### 6.1 容器背景颜色
- **对接方容器**：浅蓝色背景 `#f0f8ff`
- **数据中台容器**：浅绿色背景 `#f0fff0`
- **openAPI容器**：浅橙色背景 `#fff8f0`

### 6.2 容器边框样式
- 边框颜色：深色，与背景形成对比
- 边框宽度：2px
- 圆角半径：12px（更圆润的视觉效果）
- 边框样式：实线

### 6.3 内部元素样式
- 确保内部元素背景色与容器背景色有足够对比度
- 内部元素边框颜色要深于容器背景色
- 文字颜色要确保在容器背景上清晰可见

## 7. 注意事项

### 7.1 文本转义
- 所有包含特殊字符的节点文本必须使用双引号包裹
- 避免在节点文本中使用Mermaid语法冲突字符
- 使用HTML标签进行文本格式化时需谨慎

### 7.2 图表复杂度
- 单个图表节点数量建议不超过20个
- 复杂系统可拆分为多个子图表
- 使用子图（subgraph）组织相关节点

### 7.3 容器设计原则
- 容器背景色要浅，不影响内部元素可读性
- 容器边框要清晰，便于区分不同领域
- 容器大小要适中，避免过于拥挤或空旷
- 确保容器内元素有足够的间距

### 7.4 版本控制
- 图表应标注版本信息
- 重要变更应记录在图表注释中
- 定期更新图表以反映系统变化
description:
globs:
alwaysApply: false
---
